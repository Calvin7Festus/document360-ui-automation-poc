openapi: 3.0.3
info:
  title: Banking API
  description: Secure banking API for account management and transactions
  termsOfService: https://bank.example.com/terms
  contact:
    name: Banking API Support
    email: api-support@bank.example.com
    url: https://bank.example.com/support
  license:
    name: Proprietary
    url: https://bank.example.com/license
  version: 3.2.1
externalDocs:
  description: Banking API Documentation
  url: https://docs.bank.example.com
servers:
  - url: https://api.bank.example.com/v3
    description: Production server
    variables:
      environment:
        default: prod
        enum:
          - prod
          - sandbox
        description: Environment type
  - url: https://sandbox-api.bank.example.com/v3
    description: Sandbox server for testing
tags:
  - name: accounts
    description: Account management operations
  - name: transactions
    description: Transaction operations
  - name: transfers
    description: Money transfer operations
  - name: auth
    description: Authentication operations
paths:
  /accounts:
    get:
      tags:
        - accounts
      summary: Get user accounts
      description: Retrieve all accounts for the authenticated user
      operationId: getUserAccounts
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: []
        - apiKeyAuth: []
  /accounts/{accountId}:
    get:
      tags:
        - accounts
      summary: Get account details
      description: Retrieve details for a specific account
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
            pattern: '^ACC[0-9]{10}$'
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
  /accounts/{accountId}/transactions:
    get:
      tags:
        - transactions
      summary: Get account transactions
      description: Retrieve transaction history for an account
      operationId: getAccountTransactions
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
            pattern: '^ACC[0-9]{10}$'
        - name: startDate
          in: query
          description: Start date for transaction history
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date for transaction history
          required: false
          schema:
            type: string
            format: date
        - name: limit
          in: query
          description: Maximum number of transactions to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Transaction history
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '404':
          description: Account not found
      security:
        - bearerAuth: []
  /transfers:
    post:
      tags:
        - transfers
      summary: Create money transfer
      description: Transfer money between accounts
      operationId: createTransfer
      requestBody:
        description: Transfer details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '201':
          description: Transfer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          description: Invalid transfer request
        '401':
          description: Unauthorized
        '403':
          description: Insufficient funds or permissions
      security:
        - bearerAuth: []
        - oAuth2:
          - transfer:create
components:
  schemas:
    Account:
      type: object
      required:
        - accountId
        - accountNumber
        - accountType
        - balance
        - currency
      properties:
        accountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Unique account identifier
        accountNumber:
          type: string
          description: Account number
        accountType:
          type: string
          enum:
            - checking
            - savings
            - credit
            - investment
          description: Type of account
        balance:
          type: number
          format: decimal
          description: Current account balance
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency code (ISO 4217)
        status:
          type: string
          enum:
            - active
            - inactive
            - frozen
            - closed
          description: Account status
        openedDate:
          type: string
          format: date
          description: Date when account was opened
    Transaction:
      type: object
      required:
        - transactionId
        - accountId
        - amount
        - currency
        - type
        - timestamp
      properties:
        transactionId:
          type: string
          pattern: '^TXN[0-9]{12}$'
          description: Unique transaction identifier
        accountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Account ID
        amount:
          type: number
          format: decimal
          description: Transaction amount
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency code
        type:
          type: string
          enum:
            - debit
            - credit
            - transfer
            - fee
          description: Transaction type
        description:
          type: string
          description: Transaction description
        timestamp:
          type: string
          format: date-time
          description: Transaction timestamp
        balance:
          type: number
          format: decimal
          description: Account balance after transaction
    Transfer:
      type: object
      required:
        - transferId
        - fromAccountId
        - toAccountId
        - amount
        - currency
        - status
      properties:
        transferId:
          type: string
          pattern: '^TRF[0-9]{12}$'
          description: Unique transfer identifier
        fromAccountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Source account ID
        toAccountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Destination account ID
        amount:
          type: number
          format: decimal
          minimum: 0.01
          description: Transfer amount
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency code
        description:
          type: string
          description: Transfer description
        status:
          type: string
          enum:
            - pending
            - processing
            - completed
            - failed
            - cancelled
          description: Transfer status
        createdAt:
          type: string
          format: date-time
          description: Transfer creation timestamp
        completedAt:
          type: string
          format: date-time
          description: Transfer completion timestamp
    TransferRequest:
      type: object
      required:
        - fromAccountId
        - toAccountId
        - amount
        - currency
      properties:
        fromAccountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Source account ID
        toAccountId:
          type: string
          pattern: '^ACC[0-9]{10}$'
          description: Destination account ID
        amount:
          type: number
          format: decimal
          minimum: 0.01
          description: Transfer amount
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency code
        description:
          type: string
          maxLength: 255
          description: Transfer description
    Pagination:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          description: Current page number
        limit:
          type: integer
          minimum: 1
          maximum: 100
          description: Number of items per page
        total:
          type: integer
          minimum: 0
          description: Total number of items
        hasNext:
          type: boolean
          description: Whether there are more pages
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    oAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.bank.example.com/oauth/authorize
          tokenUrl: https://auth.bank.example.com/oauth/token
          scopes:
            account:read: Read account information
            account:write: Modify account information
            transaction:read: Read transaction history
            transfer:create: Create money transfers
            transfer:read: Read transfer information
